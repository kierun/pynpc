---
# https://taskfile.dev/#/
version: '3'

tasks:
  venv:
    desc: 'Create the virtual environment via UV'
    cmds:
      - uv sync
    sources:
      - pyproject.toml
      - uv.lock
    generates:
      - .venv/bin/activate
    status:
      - test -f .venv/bin/activate
    method: checksum
  activate:
    desc: 'Activates the virtual environment if needed'
    deps: ['venv']
    cmds:
      - source .venv/bin/activate
    status:
      - test ! -z $VIRTUAL_ENV
  tests-fast:
    desc: 'run all the fast tests, no coverage'
    deps: ['activate']
    cmds:
      - coverage run -m pytest --doctest-modules
      - coverage combine
      - coverage report -m
      - coverage xml
    sources:
      - pynpc/*.py
      - tests/*.py
  tests:
    desc: 'run all the tests and coverage'
    cmds:
      - coverage run --concurrency=thread -m pytest --doctest-modules --slow
      - coverage combine
      - coverage report -m
      - coverage xml
    sources:
      - pynpc/*.py
      - tests/*.py
  coverage-html:
    desc: 'Generates an HTML coverage report'
    deps: ['tests']
    cmds:
      - coverage html
      - xdg-open ./htmlcov/index.html
    sources:
      - pynpc/*.py
      - tests/*.py
    generates:
      - htmlcov/index.html
  format:
    desc: 'Formates the code'
    cmds:
      - isort --profile black .
      - black .
    sources:
      - pynpc/*.py
      - tests/*.py
  check-isort:
    desc: 'Isort checks'
    cmds:
      - isort --profile black --check-only --diff ./pynpc
      - isort --profile black --check-only --diff ./tests
    sources:
      - pynpc/*.py
      - tests/*.py
  check-black:
    desc: 'Black checks'
    cmds:
      - black --check .
    sources:
      - pynpc/*.py
      - tests/*.py
  check-mypy:
    desc: 'Mypy checks'
    cmds:
      - mypy ./pynpc
    sources:
      - pynpc/*.py
      - pyporject.toml
  check-docs:
    desc: 'Checks documentation'
    cmds:
      - mkdocs build -s
    sources:
      - pynpc/*.py
      - tests/*.py
      - mkdocs.yml
      - docs/**/*.md
  check-docstyle:
    desc: 'Checks documentation'
    cmds:
      - pydocstyle --verbose --count
    sources:
      - pynpc/*.py
      - tests/*.py
  check-bandit:
    desc: 'Bandit security checks'
    cmds:
      - bandit --verbose --recursive pynpc
    sources:
      - pynpc/*.py
  check-ruff:
    desc: '(experimental) Ruff checks'
    cmds:
      - ruff pynpc/*.py tests/*.py
      # - ruff -v pynpc/*.py tests/*.py
    sources:
      - pynpc/**/*.py
      - pynpc/**/*.py
      - pyproject.toml
  check:
    desc: 'Runs all the checks'
    deps:
      [
        'check-isort',
        'check-black',
        'check-mypy',
        'check-ruff',
        'check-docstyle',
        'check-docs',
        'check-bandit',
      ]
  docs:
    desc: 'Runs a mkdocs servedr on port 8000'
    cmds:
      - mkdocs serve
    sources:
      - docs/**/*
  build:
    desc: 'Generates a distribution files'
    cmds:
      - uv build --verbose
    sources:
      - docs/**/*
      - pynpc/**/*
      - tests/**/*
    generates:
      - dist/**/*
  before-push:
    desc: 'Run all the checks before a push'
    deps: ['format', 'check', 'tests']
