# on:
#   release:
#     types: [published]
#     branches: [main]

on: workflow_dispatch

name: "Publish Python 🐍 distribution 📦 to TestPyPI and PyPI"

jobs:
    semantic-release:
        # https://github.com/relekang/python-semantic-release/issues/311
        runs-on: ubuntu-latest
        concurrency: release
        permissions:
          id-token: write
          contents: write

        steps:
          - name: "Check out"
            uses: actions/checkout@v4
            with:
                fetch-depth: 0
                token: ${{ secrets.PAT }}

          - name: "Python Semantic Release"
            uses: relekang/python-semantic-release@v9.14.0
            with:
                github_token: ${{ secrets.PAT }}
                root_options: -vv

    github-release:
        needs: semantic-release
        runs-on: ubuntu-latest
        concurrency: publish
        steps:
          - name: "Check out"
            uses: actions/checkout@v4
            with:
                fetch-depth: 0

          - name: "Set up the environment"
            uses: ./.github/actions/setup-python-env
            with:
              python-version: ${{ matrix.python-version }}
              secret: ${{ secrets.GITHUB_TOKEN }}

          - name: "Get latest changes from release step"
            run: |
                git pull

          - name: "Set env for tag"
            run: |
              echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

          - name: "Testing tag env"
            run: |
              echo $RELEASE_VERSION
              echo ${{ env.RELEASE_VERSION }}

          - name: "Create GitHub Release"
            env:
              GITHUB_TOKEN: ${{ github.token }}
            run: |
              gh release create '${{ env.RELEASE_VERSION }}' --repo '${{ github.repository }}' --notes "GHA created"

          - name: "Upload artifact signatures to GitHub Release"
            env:
              GITHUB_TOKEN: ${{ github.token }}
            run: |
              gh release upload '${{ env.RELEASE_VERSION }}' dist/** --repo '${{ github.repository }}'

    pypi-publish:
      needs: github-release
      runs-on: ubuntu-latest
      steps:
        - name: "Check out"
          uses: actions/checkout@v4

        - name: "Set up the environment"
          uses: ./.github/actions/setup-python-env

        - name: "Download updated pyproject.toml"
          uses: actions/download-artifact@v4
          with:
            name: pyproject-toml

        - name: "Build package"
          run: uvx --from build pyproject-build --installer uv

        - name: "Publish package to TEST PYPI"
          run: uvx twine upload dist/*
          env:
            TWINE_USERNAME: __token__
            TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
            TWINE_REPOSITORY: testpypi

        - name: "Publish package for real to PYPI"
          run: uvx twine upload dist/*
          env:
            TWINE_USERNAME: __token__
            TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
            TWINE_REPOSITORY: pypi

    deploy-docs:
      needs: github-release
      runs-on: ubuntu-latest
      steps:
        - name: "Check out"
          uses: actions/checkout@v4

        - name: "Set up the environment"
          uses: ./.github/actions/setup-python-env

        - name: "Deploy documentation"
          run: uv run mkdocs gh-deploy --force
