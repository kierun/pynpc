---
# https://taskfile.dev/#/
name: Main

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  semantic:
      name: 'Validate PR title'
      runs-on: ubuntu-latest
      steps:
          # Default: https://github.com/commitizen/conventional-commit-types
          - uses: amannn/action-semantic-pull-request@v5
            env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  quality:
    runs-on: ubuntu-latest
    needs: semantics
    steps:
      - name: "Check out"
        uses: actions/checkout@v4

      - name: "Pre commit checks"
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: "Set up the environment"
        uses: ./.github/actions/setup-python-env

      - name: 'Install Task'
        uses: arduino/setup-task@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          version: 3.x

      - name: "Bandit security checks"
        run: task -f check-bandit

      - name: "Checks documentation"
        run: task -f check-docs

      - name: "Checks documentation style"
        run: task -f check-docstyle

      - name: "Isort checks"
        run: task -f check-isort

      - name: "Mypy checks"
        run: task -f check-mypy

      - name: "Ruff checks"
        run: task -f check-ruff

  testing:
    runs-on: ubuntu-latest
    needs: quality
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
      fail-fast: false
    defaults:
      run:
        shell: bash
    steps:
      - name: "Check out"
        uses: actions/checkout@v4

      - name: "Set up the environment"
        uses: ./.github/actions/setup-python-env
        with:
          python-version: ${{ matrix.python-version }}

      - name: 'Install Task'
        uses: arduino/setup-task@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          version: 3.x

      - name: "Run tests"
        run: task -f tests

      - name: "Upload coverage reports to Codecov with GitHub Action on Python latest â€” 3.12"
        uses: codecov/codecov-action@v4
        if: ${{ matrix.python-version == '3.12' }}

  documentation:
    runs-on: ubuntu-latest
    needs: quality
    steps:
      - name: "Check out"
        uses: actions/checkout@v4

      - name: "Set up the environment"
        uses: ./.github/actions/setup-python-env

      - name: "Check if documentation can be built"
        run: uv run mkdocs build -s
