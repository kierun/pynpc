---
# https://taskfile.dev/#/
name: Main

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  semantic:
      name: 'Validate PR title'
      runs-on: ubuntu-latest
      steps:
          # Default: https://github.com/commitizen/conventional-commit-types
          - uses: amannn/action-semantic-pull-request@v5
            env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  quality:
    runs-on: ubuntu-latest
    steps:
      - name: "Check out"
        uses: actions/checkout@v4

      - name: "Pre commit checks"
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: "Set up the environment"
        uses: ./.github/actions/setup-python-env
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}

      - name: "Bandit security checks"
        run: task -f check-bandit

      - name: "Checks documentation style"
        run: task -f check-docstyle

      - name: "Isort checks"
        run: task -f check-isort

      # - name: "Mypy checks"
      #   run: task -f check-mypy

      - name: "Ruff checks"
        run: task -f check-ruff

  testing:
    runs-on: ubuntu-latest
    needs: quality
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
      fail-fast: false
    defaults:
      run:
        shell: bash
    steps:
      - name: "Check out"
        uses: actions/checkout@v4

      - name: "Set up the environment"
        uses: ./.github/actions/setup-python-env
        with:
          python-version: ${{ matrix.python-version }}
          secret: ${{ secrets.GITHUB_TOKEN }}

      - name: "Run tests"
        run: |
          mkdir -p ./artifacts
          uv run pytest \
            --slow \
            --junitxml=./artifacts/pytest-${{ matrix.python-version }}.xml \
            --cov-report=term-missing \
            --cov=pynpc \
            --cov=tests \
            tests/ \
            | tee ./artifacts/pytest-${{ matrix.python-version }}.txt

      - name: 'Upload pytest test results'
        uses: actions/upload-artifact@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: pytest-coverage-${{ matrix.python-version }}
          path: ./artifacts/
        if: ${{ always() }}

  documentation:
    runs-on: ubuntu-latest
    needs: quality
    steps:
      - name: "Check out"
        uses: actions/checkout@v4

      - name: "Set up the environment"
        uses: ./.github/actions/setup-python-env
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}

      - name: "Checks documentation"
        run: task -f check-docs

  coverage:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    needs: testing
    steps:
      - name: "Check out"
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          path: ./artifacts/

      - name: "Pytest coverage comment"
        uses: MishaKav/pytest-coverage-comment@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          pytest-coverage-path: artifacts/pytest-coverage-3.12/pytest-3.12.txt
          junitxml-path: artifacts/pytest-coverage-3.12/pytest-3.12.xml
