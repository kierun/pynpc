---
on:
  merge_group:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
name: on-pull-request
jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v5
      - name: Install uv
        uses: astral-sh/setup-uv@v6
      - name: Set up the environment
        run: uv sync --locked --all-extras --dev
      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          version: 3.x
      - name: Run checks
        uses: ./.github/workflows/run-checks
  matrix:
    runs-on: ubuntu-latest
    needs: quality
    strategy:
      matrix:
        python-version:
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
    steps:
      - uses: actions/checkout@v5
      - name: Setup Python version
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup GnuPG
        run: |
          sudo apt-get update
          sudo apt-get install -y gnupg
      - name: Test with pytest-cov
        run: |
          mkdir -p ./artifacts
          source .venv/bin/activate
          pytest \
            --slow \
            --junitxml=./artifacts/pytest-${{ matrix.python-version }}.xml \
            --cov-report=term-missing \
            --cov=pynpc \
            --cov=tests \
            tests/ \
            | tee ./artifacts/pytest-${{ matrix.python-version }}.txt
      - name: Upload pytest test results
        uses: actions/upload-artifact@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: pytest-coverage-${{ matrix.python-version }}
          path: ./artifacts/
        if: ${{ always() }}
  coverage:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    needs: matrix
    steps:
      - name: Check out
        uses: actions/checkout@v5
      - name: Debug
        run: |
          mkdir artifacts
          ls -la .
          tree
      - uses: actions/download-artifact@v5
        with:
          path: ./artifacts/
      - name: Display structure of downloaded files
        run: |
          ls -R ./artifacts
          tree ./artifacts
      - name: Pytest coverage comment
        uses: MishaKav/pytest-coverage-comment@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          pytest-coverage-path: artifacts/pytest-coverage-3.13/pytest-3.13.txt
          junitxml-path: artifacts/pytest-coverage-3.13/pytest-3.13.xml
